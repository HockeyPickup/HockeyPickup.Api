name: Build, Test, Cover, Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: HockeyPickupApi
  AZURE_WEBAPP_PACKAGE_PATH: HockeyPickup.Api\publish
  DOTNET_CORE_VERSION: 9.x
  WORKING_DIRECTORY: HockeyPickup.Api

jobs:
  tag_version:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO_OWNER: HockeyPickup
        DEFAULT_BUMP: patch

  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Restore
        run: |
          dotnet restore
          dotnet tool restore

      - name: Fixups
        run: |
          git fetch --tags
          git update-index --chmod=+x ./scripts/*
          chmod +x ./scripts/*
          # ./scripts/update-git.sh

      - name: Versions
        run: |
          dotnet --version
          git --version
          az --version
          bash --version

        # This step is necessary because during the build step, the bash -c invoke of build-version.vbs fails.
      - name: Run Build Version Script
        run: bash -c ./scripts/build-version.sh
        shell: bash

      - name: Build Debug Version
        run: dotnet build --no-restore

      - name: Test
        shell: pwsh
        run: |
          ./scripts/RunTests.ps1 -ci true

      - name: Publish Coverage to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: HockeyPickup.Api.Tests/TestResults/coverage.info

      - name: Build Release Version
        run: dotnet build --configuration Release

      - name: Publish Artifact
        run: |
          dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration Release --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: windows-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Deploy to Azure WebApp
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_96F26ADF16CB43838E665B91D02A7B1A }}
